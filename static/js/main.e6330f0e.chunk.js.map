{"version":3,"sources":["features/appSlice.js","SidebarChat.js","firebase.js","features/userSlice.js","Sidebar.js","Messages.js","Chat.js","Login.js","App.js","app/store.js","index.js"],"names":["appSlice","createSlice","name","initialState","roomId","roomName","reducers","setRoomInfo","state","action","payload","actions","selectRoomId","app","selectRoomName","SidebarChat","id","room","useState","seed","setSeed","dispatch","useDispatch","useEffect","Math","floor","random","className","onClick","Avatar","src","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","google","GoogleAuthProvider","userSlice","user","login","logout","selectUser","Sidebar","rooms","setRooms","useSelector","collection","onSnapshot","snapshot","docs","map","item","data","profilePic","signOut","then","IconButton","type","placeholder","prompt","length","alert","add","Messages","timestamp","message","Date","toDate","toUTCString","email","CheatHeader","input","setInput","messages","setMessages","setRandom","doc","orderBy","value","onChange","e","target","preventDefault","FieldValue","serverTimestamp","disabled","Login","alt","signInWithPopup","catch","error","App","onAuthStateChanged","uid","displayName","photoURL","store","configureStore","reducer","userReducer","appReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6330f0e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: {\r\n    roomId: null,\r\n    roomName: null,\r\n  },\r\n  reducers: {\r\n    setRoomInfo: (state, action) => {\r\n      state.roomId = action.payload.roomId;\r\n      state.roomName = action.payload.roomName;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setRoomInfo } = appSlice.actions;\r\n\r\nexport const selectRoomId = (state) => state.app.roomId;\r\nexport const selectRoomName = (state) => state.app.roomName;\r\n\r\nexport default appSlice.reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./SidebarChat.css\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setRoomInfo } from \"./features/appSlice\";\r\n\r\nexport default function SidebarChat({ id, room }) {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 1000));\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"sidebarChat\"\r\n      id={id}\r\n      onClick={() => dispatch(setRoomInfo({ roomId: id, roomName: room }))}\r\n    >\r\n      <Avatar\r\n        src={`https://avatars.dicebear.com/api/avataaars/${seed}.svg`}\r\n      ></Avatar>\r\n      <div className=\"sidebarChat-info\">\r\n        <h2>{room}</h2>\r\n        <p>Last seen...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAxDfbuetg3jx6zEcIIoQq3ctK05uDZgFs\",\r\n  authDomain: \"whatsapp-e1158.firebaseapp.com\",\r\n  projectId: \"whatsapp-e1158\",\r\n  storageBucket: \"whatsapp-e1158.appspot.com\",\r\n  messagingSenderId: \"698226016851\",\r\n  appId: \"1:698226016851:web:e6e944be31de9a7ada3ca6\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst google = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, auth, google };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DonutLargeIcon from \"@mui/icons-material/DonutLarge\";\r\nimport ChatIcon from \"@mui/icons-material/Chat\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectUser, logout } from \"./features/userSlice\";\r\n\r\nexport default function Sidebar() {\r\n  const [rooms, setRooms] = useState([]);\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    db.collection(\"rooms\").onSnapshot((snapshot) => {\r\n      setRooms(\r\n        snapshot.docs.map((item) => ({\r\n          id: item.id,\r\n          data: item.data(),\r\n        }))\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  const addRoom = () => {\r\n    const room = prompt(\"Add new User\");\r\n    if (room.length === 0) {\r\n      return alert(\"Please enter a valid user name\");\r\n    }\r\n    db.collection(\"rooms\").add({\r\n      name: room,\r\n    });\r\n  };\r\n\r\n  const signOut = () => {\r\n    auth.signOut().then(() => dispatch(logout()));\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-header\">\r\n        <Avatar\r\n          src={user.profilePic}\r\n          onClick={signOut}\r\n          className=\"logout\"\r\n        ></Avatar>\r\n      </div>\r\n      <div className=\"sidebar-header-right\">\r\n        <IconButton>\r\n          <DonutLargeIcon></DonutLargeIcon>\r\n        </IconButton>\r\n        <IconButton>\r\n          <ChatIcon></ChatIcon>\r\n        </IconButton>\r\n        <IconButton>\r\n          <MoreVertIcon></MoreVertIcon>\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"sidebar-search\">\r\n        <div className=\"sidebar-search-container\">\r\n          <SearchOutlinedIcon></SearchOutlinedIcon>\r\n          <input type=\"text\" placeholder=\"Search or start new chat\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar-chats\">\r\n        <div className=\"createChat\">\r\n          <h2 onClick={addRoom}>Add new User</h2>\r\n        </div>\r\n        <SidebarChat></SidebarChat>\r\n        {rooms.map(({ id, data: { name } }) => {\r\n          return <SidebarChat key={id} room={name} id={id}></SidebarChat>;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport \"./Messages.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"./features/userSlice\";\r\n\r\nexport default function Messages({ timestamp, message }) {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      <Avatar src={user.profilePic}></Avatar>\r\n      <div className=\"message-info\">\r\n        <h4 className=\"message-name\">\r\n          {user.name}\r\n          <span className=\"message-timestamp\">\r\n            {new Date(timestamp?.toDate()).toUTCString()}\r\n          </span>\r\n        </h4>\r\n        <div\r\n          className={`message-email-section ${user.name && \"chat-reciever\"}`}\r\n        >\r\n          <span className=\"message-email\">{user.email}</span>\r\n          <p>{message}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Chat.css\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\r\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport { useSelector } from \"react-redux\";\r\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\r\nimport MicIcon from \"@mui/icons-material/Mic\";\r\nimport Messages from \"./Messages\";\r\nimport { db } from \"./firebase\";\r\nimport { selectRoomName, selectRoomId } from \"./features/appSlice\";\r\nimport firebase from \"firebase\";\r\nimport { selectUser } from \"./features/userSlice\";\r\n\r\nexport default function CheatHeader() {\r\n  const user = useSelector(selectUser);\r\n  const [input, setInput] = useState(\"\");\r\n  const roomId = useSelector(selectRoomId);\r\n  const roomName = useSelector(selectRoomName);\r\n  const [messages, setMessages] = useState([]);\r\n  const [random, setRandom] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (roomId)\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(\r\n            snapshot.docs.map((item) => ({\r\n              id: item.id,\r\n              data: item.data(),\r\n            }))\r\n          )\r\n        );\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      email: user.email,\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setRandom(Math.floor(Math.random() * 1000));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat-header\">\r\n        <Avatar\r\n          src={`https://avatars.dicebear.com/api/avataaars/${random}.svg`}\r\n        ></Avatar>\r\n        <div className=\"chat-info\">\r\n          <h3>{roomName}</h3>\r\n          <p>{messages?.timestamp || \"Last seen\"}</p>\r\n        </div>\r\n        <div className=\"chat-icons\">\r\n          <IconButton>\r\n            <SearchOutlinedIcon></SearchOutlinedIcon>\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFileIcon></AttachFileIcon>\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon></MoreVertIcon>\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-body\">\r\n        <Messages></Messages>\r\n        {messages.map(({ id, data: { message, timestamp, email } }) => {\r\n          return (\r\n            <Messages\r\n              id={id}\r\n              key={id}\r\n              message={message}\r\n              email={email}\r\n              timestamp={timestamp}\r\n            ></Messages>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"chat-footer\">\r\n        <EmojiEmotionsIcon></EmojiEmotionsIcon>\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={`Send message ${user.name}`}\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"btn-footer\"\r\n            onClick={sendMessage}\r\n            disabled={!input}\r\n          >\r\n            Send Message\r\n          </button>\r\n        </form>\r\n        <MicIcon></MicIcon>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { auth, google } from \"./firebase\";\r\nimport \"./Login.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"./features/userSlice\";\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch(\"\");\r\n\r\n  const Login = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithPopup(google)\r\n      .then(({ data }) => {\r\n        dispatch(login({ data }));\r\n      })\r\n      .catch((error) => alert(error));\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login-container\">\r\n        <img\r\n          src=\"https://cdn.iconscout.com/icon/free/png-512/whatsapp-circle-1868968-1583132.png\"\r\n          alt=\"\"\r\n        />\r\n        <button onClick={Login} className=\"login-btn\">\r\n          Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport Login from \"./Login\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { auth } from \"./firebase\";\nimport { login } from \"./features/userSlice\";\nimport { selectUser } from \"./features/userSlice\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        dispatch(\n          login({\n            uid: user.uid,\n            name: user.displayName,\n            email: user.email,\n            profilePic: user.photoURL,\n          })\n        );\n      }\n    });\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login></Login>\n      ) : (\n        <div className=\"app-body\">\n          <Sidebar></Sidebar>\n          <Chat></Chat>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/userSlice\";\nimport appReducer from \"../features/appSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    app: appReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}